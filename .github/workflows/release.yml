name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  publish-binary:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [16.x, 17.x, 18.x, 19.x]

    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Fetch source code
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        override: true
        toolchain: 1.63.0

    - name: Install Nix
      if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Use Cachix
      if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
      uses: cachix/cachix-action@v10
      with:
        name: perspect3vism
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}' 

    - name: Install dependencies
      run: npm install

    - name: Get Binaries (MacOS)
      if: matrix.platform == 'macos-latest'
      run: |
        [ ! -d "./temp/binary" ] && mkdir -p "./temp/binary"

        wget https://github.com/perspect3vism/ad4m-host/releases/download/binary-deps-0.0.161/hc-darwin-0.0.56
        mv hc-darwin-0.0.56 temp/binary/hc
        chmod +x temp/binary/hc

        wget https://github.com/perspect3vism/ad4m-host/releases/download/binary-deps-0.0.161/holochain-darwin-0.0.161
        mv holochain-darwin-0.0.161 temp/binary/holochain
        chmod +x temp/binary/holochain

        wget https://github.com/perspect3vism/ad4m-host/releases/download/binary-deps-0.0.161/lair-keystore-darwin-0.2.0
        mv lair-keystore-darwin-0.2.0 temp/binary/lair-keystore
        chmod +x temp/binary/lair-keystore

    - name: Get Binaries (Ubuntu)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        [ ! -d "./temp/binary" ] && mkdir -p "./temp/binary"

        wget https://github.com/perspect3vism/ad4m-host/releases/download/binary-deps-0.0.161/hc-linux-0.0.56
        mv hc-linux-0.0.56 temp/binary/hc
        chmod +x temp/binary/hc

        wget https://github.com/perspect3vism/ad4m-host/releases/download/binary-deps-0.0.161/holochain-linux-0.0.161
        mv holochain-linux-0.0.161 temp/binary/holochain
        chmod +x temp/binary/holochain

        wget https://github.com/perspect3vism/ad4m-host/releases/download/binary-deps-0.0.161/lair-keystore-linux-0.2.0
        mv lair-keystore-linux-0.2.0 temp/binary/lair-keystore
        chmod +x temp/binary/lair-keystore

    - name: Get Binaries (Windows)
      if: matrix.platform == 'windows-latest'
      run: |
        choco install wget --no-progress
        
        mkdir temp/binary

        wget https://github.com/perspect3vism/ad4m-host/releases/download/binary-deps-0.0.161/hc-windows-0.0.56.exe
        Copy-Item hc-windows-0.0.56.exe -Destination temp/binary/hc.exe

        wget https://github.com/perspect3vism/ad4m-host/releases/download/binary-deps-0.0.161/holochain-windows-0.0.161.exe
        Copy-Item holochain-windows-0.0.161.exe -Destination temp/binary/holochain.exe

        wget https://github.com/perspect3vism/ad4m-host/releases/download/binary-deps-0.0.161/lair-keystore-windows-0.2.0.exe
        Copy-Item lair-keystore-windows-0.2.0.exe -Destination temp/binary/lair-keystore.exe

    - name: Copy swipl (Ubuntu)
      env:
        SQLCIPHER_STATIC: 1
      if: matrix.platform == 'ubuntu-latest'
      run: |        
        sudo apt install unzip
        ./scripts/unpack-swipl.sh

    - name: Copy swipl (MacOS)
      env:
        SQLCIPHER_STATIC: 1
      if: matrix.platform == 'macos-latest'
      run: |
        npm run copy-swipl
        npm run relink-swipl-macos

    - name: Copy swipl (Windows)
      env:
        SQLCIPHER_STATIC: 1
      if: matrix.platform == 'windows-latest'
      run: |
        npm run copy-swipl-windows

    - name: List binaries
      run: ls temp/binary

    - name: Build the binary (macos-latest)
      if: matrix.platform == 'macos-latest'
      run: npm run build && npm run package-macos

    - name: Copy binary to include node version (macOS)
      if: matrix.platform == 'macos-latest'
      run: cp dist/ad4m-macos-x64 dist/ad4m-macos-x64-node-${{ matrix.node-version }}
    
    - name: Copy binary to include node version (Linux)
      if: matrix.platform == 'ubuntu-latest'
      run: cp dist/ad4m-linux-x64 dist/ad4m-linux-x64-node-${{ matrix.node-version }}

    - name: Copy binary to include node version (Windows)
      if: matrix.platform == 'windows-latest'
      run: Copy-Item dist/ad4m-windows-x64.exe dist/ad4m-windows-x64-node-${{ matrix.node-version }}.exe

    - name: Upload the binary (macos-latest)
      if: matrix.platform == 'macos-latest'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/ad4m-macos-x64-node-${{ matrix.node-version }}"
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
    
    - name: Build the binary (linux-latest)
      if: matrix.platform == 'ubuntu-latest'
      run: npm run build && npm run package-linux
    - name: Upload the binary (linux-latest)
      if: matrix.platform == 'ubuntu-latest'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/ad4m-linux-x64-node-${{ matrix.node-version }}"
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
    
    - name: Build the binary (windows-latest)
      if: matrix.platform == 'windows-latest'
      run: npm run build && npm run package-windows
    - name: Upload the binary (windows-latest)
      if: matrix.platform == 'windows-latest'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/ad4m-windows-x86-node-${{ matrix.node-version }}.exe"
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true