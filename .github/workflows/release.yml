name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  publish-binary:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [16.x]

    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Fetch source code
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        override: true
        toolchain: 1.63.0
    - name: Install dependencies
      run: npm install
    - name: Build Holochain (Ubuntu|macOS)
      env:
        SQLCIPHER_STATIC: 1
      if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
      run: |
        cargo install lair_keystore --version 0.2.0
        cargo install holochain --version 0.0.161
        cargo install holochain_cli --version 0.0.56

        [ ! -d "./temp/binary" ] && mkdir -p "./temp/binary"

        [ -f "./temp/binary/holochain" ] && rm -f ./temp/binary/holochain
        cp `which holochain` ./temp/binary/ && echo "Copied Holochain to temp/binary"

        [ -f "./temp/binary/lair-keystore" ] && rm -f ./temp/binary/lair-keystore
        cp `which lair-keystore` ./temp/binary/ && echo "Copied lair-keystore to temp/binary"

        [ -f "./temp/binary/hc" ] && rm -f ./temp/binary/hc
        cp `which hc` ./temp/binary/ && echo "Copied hc to temp/binary"
    - name: Build Holochain (Windows)
      env:
        SQLCIPHER_STATIC: 1
      if: matrix.platform == 'windows-latest'
      run: |
        cargo install lair_keystore --version 0.2.0
        cargo install holochain --version 0.0.161
        cargo install holochain_cli --version 0.0.56

        mkdir temp/binary

        $LkPath = Get-Command lair-keystore | Select-Object -ExpandProperty Definition
        Copy-Item $LkPath -Destination temp/binary/lair-keystore.exe

        $HcPath = Get-Command holochain | Select-Object -ExpandProperty Definition
        Copy-Item $HcPath -Destination temp/binary/holochain.exe

        $HciPath = Get-Command hc | Select-Object -ExpandProperty Definition
        Copy-Item $HciPath -Destination temp/binary/hc.exe
    - name: Copy swipl (Ubuntu)
      env:
        SQLCIPHER_STATIC: 1
      if: matrix.platform == 'ubuntu-latest'
      run: |        
        sudo apt install unzip
        ./scripts/unpack-swipl.sh
    - name: Copy swipl (macOs)
      env:
        SQLCIPHER_STATIC: 1
      if: matrix.platform == 'macos-latest'
      run: |
        npm run copy-swipl
        npm run relink-swipl-macos
    - name: Copy swipl (Windows)
      env:
        SQLCIPHER_STATIC: 1
      if: matrix.platform == 'windows-latest'
      run: |
        npm run copy-swipl-windows
    - name: List binaries
      run: ls temp/binary
    - name: Build the binary (macos-latest)
      if: matrix.platform == 'macos-latest'
      run: npm run build && npm run package-macos
    - name: Upload the binary (macos-latest)
      if: matrix.platform == 'macos-latest'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/ad4m-macos-x64"
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
    
    - name: Build the binary (linux-latest)
      if: matrix.platform == 'ubuntu-latest'
      run: npm run build && npm run package-linux
    - name: Upload the binary (linux-latest)
      if: matrix.platform == 'ubuntu-latest'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/ad4m-linux-x64"
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
    
    - name: Build the binary (windows-latest)
      if: matrix.platform == 'windows-latest'
      run: npm run build && npm run package-windows
    - name: Upload the binary (windows-latest)
      if: matrix.platform == 'windows-latest'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/ad4m-windows-x64.exe"
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true